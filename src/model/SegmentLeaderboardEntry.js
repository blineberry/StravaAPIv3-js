/*
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.StravaApiV3) {
      root.StravaApiV3 = {};
    }
    root.StravaApiV3.SegmentLeaderboardEntry = factory(root.StravaApiV3.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The SegmentLeaderboardEntry model module.
   * @module model/SegmentLeaderboardEntry
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>SegmentLeaderboardEntry</code>.
   * A row in a segment leaderboard
   * @alias module:model/SegmentLeaderboardEntry
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>SegmentLeaderboardEntry</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SegmentLeaderboardEntry} obj Optional instance to populate.
   * @return {module:model/SegmentLeaderboardEntry} The populated <code>SegmentLeaderboardEntry</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('athlete_name'))
        obj.athleteName = ApiClient.convertToType(data['athlete_name'], 'String');
      if (data.hasOwnProperty('elapsed_time'))
        obj.elapsedTime = ApiClient.convertToType(data['elapsed_time'], 'Number');
      if (data.hasOwnProperty('moving_time'))
        obj.movingTime = ApiClient.convertToType(data['moving_time'], 'Number');
      if (data.hasOwnProperty('start_date'))
        obj.startDate = ApiClient.convertToType(data['start_date'], 'Date');
      if (data.hasOwnProperty('start_date_local'))
        obj.startDateLocal = ApiClient.convertToType(data['start_date_local'], 'Date');
      if (data.hasOwnProperty('rank'))
        obj.rank = ApiClient.convertToType(data['rank'], 'Number');
    }
    return obj;
  }

  /**
   * The public name of the athlete
   * @member {String} athleteName
   */
  exports.prototype.athleteName = undefined;

  /**
   * The elapsed of the segment effort associated with this entry
   * @member {Number} elapsedTime
   */
  exports.prototype.elapsedTime = undefined;

  /**
   * The moving of the segment effort associated with this entry
   * @member {Number} movingTime
   */
  exports.prototype.movingTime = undefined;

  /**
   * The time at which the effort was started.
   * @member {Date} startDate
   */
  exports.prototype.startDate = undefined;

  /**
   * The time at which the effort was started in the local timezone.
   * @member {Date} startDateLocal
   */
  exports.prototype.startDateLocal = undefined;

  /**
   * The rank of this entry in the leaderboard
   * @member {Number} rank
   */
  exports.prototype.rank = undefined;

  return exports;

}));
